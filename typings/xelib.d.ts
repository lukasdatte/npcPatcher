/** Declaration file generated by dts-gen ///// <reference no-default-lib="true"/> */

/**
 * Handle of an xelib Record
 * @typedef XelibRecord
 * @type {Handle}
 */

type XelibRecord = Handle;

/**
 * Handle for xelib
 * @typedef Handle
 * @type {int}
 */

type Handle = number;

declare const xelib: {
    Fail: any;
    GetArray: any;
    GetBool: any;
    GetBoolValue: any;
    GetByte: any;
    GetDictionary: any;
    GetEnumValue: any;
    GetHandle: any;
    GetImageData: any;
    GetInteger: any;
    GetNativeValue: any;
    GetNativeValueEx: any;
    GetString: any;
    GetStringArray: any;
    GetStringValue: any;
    SetNativeValue: any;
    applyEnums: any;
    arrayItemContext: any;
    buildFlags: any;
    buildOptions: any;
    elementContext: any;
    flagContext: any;
    readCardinalArray: any;
    readImageData: any;
    wcb: any;
    AddMasters: any;
    CloseXEdit: any;
    DefToJson: any;
    ElementFromJson: any;
    ElementToJson: any;
    GetExceptionMessageLength: any;
    GetExceptionStackLength: any;
    GetMessagesLength: any;
    GetResultArray: any;
    GetResultBytes: any;
    GetResultString: any;
    InitXEdit: any;
    SetBackupPath: any;
    path: string;
    AddAdditionalRace: any;
    AddAllMasters: any;
    AddArrayItem: any;
    AddCondition: any;
    AddEffect: any;
    AddElement: any;
    AddElementValue: any;
    AddFile: any;
    AddFootstep: any;
    AddFormID: any;
    AddGroup: any;
    AddItem: any;
    AddKeyword: any;
    AddLeveledEntry: any;
    AddMaster: any;
    AddMusicTrack: any;
    AddPerk: any;
    AddRequiredMasters: any;
    AddScript: any;
    AddScriptProperty: any;
    BuildArchive: any;
    BuildReferenceMap: any;
    BuildReferences: any;
    CRCHash: any;
    CheckForErrors: any;
    CleanMasters: any;
    CleanStore: any;
    ClearMessages: any;
    CopyElement(id: Handle, id2: Handle, asNew? : boolean): Handle;
    CreateHandleGroup(): undefined;
    DefToJSON: any;
    DefToObject: any;
    DefType: any;
    DisplayName(record : XelibRecord): string;
    EditorID(record : XelibRecord): string;
    ElementCount: any;
    ElementEquals: any;
    ElementFromJSON: any;
    ElementFromObject: any;
    ElementMatches: any;
    ElementToJSON: any;
    ElementToObject(handle : Handle): any;
    ElementType: any;
    ExchangeReferences: any;
    ExtractContainer: any;
    ExtractFile: any;
    ExtractSignature: any;
    FileByAuthor: any;
    FileByIndex: any;
    FileByLoadOrder: any;
    FileByName: any;
    FilterRecord: any;
    Finalize: any;
    FindNextElement: any;
    FindNextRecord: any;
    FindPreviousElement: any;
    FindPreviousRecord: any;
    FindValidReferences: any;
    FreeHandleGroup(): undefined;
    FullName(record: XelibRecord): string;
    GetActivePlugins: any;
    GetAddList: any;
    GetAllFlags: any;
    GetAllowedSignatures: any;
    GetArmorRating: any;
    GetArmorType: any;
    GetArrayItem: any;
    GetAvailableMasters: any;
    GetCanAdd: any;
    GetChildGroup: any;
    GetCondition: any;
    GetConflictData(nodes: Handle | 0, element: Handle, asString : boolean): [string, string] | [number, number];
    GetConflictDataEx: any;
    GetContainer: any;
    GetContainerEx: any;
    GetContainerFiles: any;
    GetDamage: any;
    GetDefNames: any;
    GetDuplicateHandles: any;
    GetEffect: any;
    GetElement(id: Handle, path : string): Handle;
    GetElementEx: any;
    GetElementFile: any;
    GetElementGroup: any;
    GetElementRecord: any;
    GetElements: any;
    GetEnabledFlags: any;
    GetEnumOptions: any;
    GetErrorThreadDone: any;
    GetErrors: any;
    GetExceptionMessage: any;
    GetExceptionStack: any;
    GetFileAuthor: any;
    GetFileContainer: any;
    GetFileDescription: any;
    GetFileHeader: any;
    GetFileLoadOrder: any;
    GetFileName: any;
    GetFlag: any;
    GetFloatValue: any;
    GetFloatValueEx: any;
    GetFormID(record : XelibRecord): string;
    GetGameLanguage: any;
    GetGamePath: any;
    GetGlobal: any;
    GetGlobals: any;
    GetGoldValue: any;
    GetHexFormID: any;
    GetInjectionTarget: any;
    GetIntValue: any;
    GetIntValueEx: any;
    GetIsESM: any;
    GetIsEditable: any;
    GetIsEssential: any;
    GetIsFemale: any;
    GetIsModified: any;
    GetIsRemoveable: any;
    GetIsUnique: any;
    GetItem: any;
    GetLeveledEntry: any;
    GetLinksTo: any;
    GetLinksToEx: any;
    GetLoadOrder: any;
    GetLoadedContainers: any;
    GetLoadedFileNames(): string[];
    GetLoaderStatus: any;
    GetMasterNames: any;
    GetMasterRecord(record : XelibRecord): XelibRecord;
    GetMasters: any;
    GetMessages: any;
    GetNextObjectID: any;
    GetNodeElements: any;
    GetNodes: any;
    GetOverrideRecordCount: any;
    GetOverrides(record : XelibRecord): XelibRecord[];
    GetPerk: any;
    GetPreviousOverride: any;
    GetREFRs: any;
    GetRecord: any;
    GetRecordConflictData: any;
    GetRecordCount: any;
    GetRecordDef: any;
    GetRecordFlag(record: XelibRecord, flag: string): boolean;
    GetRecords(id: Handle, search : string, includeOverrides: boolean): XelibRecord[];
    GetRefEditorID: any;
    GetRefValue: any;
    GetRefValueEx: any;
    GetReferencedBy: any;
    GetRequiredBy: any;
    GetScript: any;
    GetScriptProperty: any;
    GetSignatureAllowed: any;
    GetSignatureNameMap: any;
    GetTextureData: any;
    GetUIntValue: any;
    GetUIntValueEx: any;
    GetValue(record : XelibRecord, path: string) : string;
    GetValueEx: any;
    GetWeight: any;
    GetWinningOverride: any;
    HasAdditionalRace: any;
    HasArrayItem: any;
    HasCondition: any;
    HasEffect: any;
    HasElement: any;
    HasFootstep: any;
    HasFormID: any;
    HasGroup: any;
    HasItem: any;
    HasKeyword: any;
    HasLeveledEntry: any;
    HasMusicTrack: any;
    HasPerk: any;
    HasScript: any;
    HasScriptProperty: any;
    Hex: any;
    Initialize: any;
    IsFixed: any;
    IsFlags: any;
    IsInjected: any;
    IsMaster(record : XelibRecord): boolean;
    IsOverride: any;
    IsSorted: any;
    IsWinningOverride: any;
    LoadContainer: any;
    LoadPlugin: any;
    LoadPluginHeader: any;
    LoadPlugins: any;
    LocalPath: any;
    LongName: any;
    LongPath: any;
    MD5Hash: any;
    MoveArrayItem: any;
    Name(record : XelibRecord): string;
    NameFromSignature: any;
    NukeFile: any;
    OutsideHandleGroup: any;
    Path(record : XelibRecord): string;
    PathName(record : XelibRecord): string;
    PlacementName: any;
    Release: any;
    ReleaseNodes: any;
    RemoveAdditionalRace: any;
    RemoveArrayItem: any;
    RemoveCondition: any;
    RemoveEffect: any;
    RemoveElement(id: Handle, path : string) : undefined;
    RemoveElementEx: any;
    RemoveElementOrParent: any;
    RemoveFootstep: any;
    RemoveFormID: any;
    RemoveIdenticalRecords: any;
    RemoveItem: any;
    RemoveKeyword: any;
    RemoveLeveledEntry: any;
    RemoveMusicTrack: any;
    RemovePerk: any;
    RemoveScript: any;
    RemoveScriptProperty: any;
    RenameFile: any;
    ResetFilter: any;
    ResetStore: any;
    ResolveElements: any;
    ResolveElementsEx: any;
    Rotate: any;
    SaveFile: any;
    SetArmorRating: any;
    SetArmorType: any;
    SetDamage: any;
    SetElement: any;
    SetEnabledFlags: any;
    SetFileAuthor: any;
    SetFileDescription: any;
    SetFlag: any;
    SetFloatValue: any;
    SetFormID: any;
    SetGameMode: any;
    SetGamePath: any;
    SetGoldValue: any;
    SetIntValue: any;
    SetIsESM: any;
    SetIsEditable: any;
    SetIsEssential: any;
    SetIsFemale: any;
    SetIsUnique: any;
    SetLanguage: any;
    SetLinksTo: any;
    SetNextObjectID: any;
    SetRecordFlag: any;
    SetSortMode: any;
    SetUIntValue: any;
    SetValue: any;
    SetWeight: any;
    Signature: any;
    SignatureFromName: any;
    SmashType: any;
    SortEditorIDs: any;
    SortKey: any;
    SortMasters: any;
    SortNames: any;
    SortPath: any;
    Switch: any;
    Translate: any;
    UnloadPlugin: any;
    ValueType: any;
    WithEachHandle: any;
    WithHandle: any;
    WithHandleGroup: any;
    WithHandles: any;
    archiveTypes: string[];
    baFO3: number;
    baFO4: number;
    baFO4dds: number;
    baNone: number;
    baSSE: number;
    baTES3: number;
    baTES4: number;
    caConflict: number;
    caConflictBenign: number;
    caConflictCritical: number;
    caNoConflict: number;
    caOnlyOne: number;
    caOverride: number;
    caUnknown: number;
    conflictAll: string[];
    conflictThis: string[];
    ctConflictBenign: number;
    ctConflictLoses: number;
    ctConflictWins: number;
    ctHiddenByModGroup: number;
    ctIdenticalToMaster: number;
    ctIdenticalToMasterWinsConflict: number;
    ctIgnored: number;
    ctMaster: number;
    ctNotDefined: number;
    ctOnlyOne: number;
    ctOverride: number;
    ctUnknown: number;
    defTypes: string[];
    dtArray: number;
    dtByteArray: number;
    dtEmpty: number;
    dtFlag: number;
    dtFloat: number;
    dtInteger: number;
    dtIntegerFormater: number;
    dtIntegerFormaterUnion: number;
    dtLString: number;
    dtLenString: number;
    dtRecord: number;
    dtString: number;
    dtStruct: number;
    dtStructChapter: number;
    dtSubRecord: number;
    dtSubRecordArray: number;
    dtSubRecordStruct: number;
    dtSubRecordUnion: number;
    dtUnion: number;
    elementTypes: string[];
    etArray: number;
    etFile: number;
    etFlag: number;
    etGroupRecord: number;
    etMainRecord: number;
    etStringListTerminator: number;
    etStruct: number;
    etStructChapter: number;
    etSubRecord: number;
    etSubRecordArray: number;
    etSubRecordStruct: number;
    etSubRecordUnion: number;
    etUnion: number;
    etValue: number;
    gameModes: string[];
    games: {
        exeName: string;
        mode: number;
        name: string;
        shortName: string;
    }[];
    gmFNV: number;
    gmFO3: number;
    gmFO4: number;
    gmSSE: number;
    gmTES4: number;
    gmTES5: number;
    loaderStates: string[];
    logger: {
        Console: any;
        assert: any;
        clear: any;
        context: any;
        count: any;
        countReset: any;
        debug: any;
        dir: any;
        dirxml: any;
        error: any;
        group: any;
        groupCollapsed: any;
        groupEnd: any;
        info: any;
        log: any;
        profile: any;
        profileEnd: any;
        table: any;
        time: any;
        timeEnd: any;
        timeLog: any;
        timeStamp: any;
        trace: any;
        warn: any;
        lsActive: number;
        lsDone: number;
        lsError: number;
        lsInactive: number;
        printStack: boolean;
        smashTypes: string[];
        stByteArray: number;
        stFlag: number;
        stFloat: number;
        stInteger: number;
        stRecord: number;
        stSortedArray: number;
        stSortedStructArray: number;
        stString: number;
        stStruct: number;
        stUnion: number;
        stUnknown: number;
        stUnsortedArray: number;
        stUnsortedStructArray: number;
        valueTypes: string[];
        verbose: boolean;
        vtArray: number;
        vtBytes: number;
        vtColor: number;
        vtEnum: number;
        vtFlags: number;
        vtNumber: number;
        vtReference: number;
        vtString: number;
        vtStruct: number;
        vtText: number;
        vtUnknown: number;
    }
};
